
{{alias}}( N, cx, strideX )
    Computes the L2-norm of a complex single-precision floating-point vector.

    The `N` and `strideX` parameters determine which elements in `cx` are
    accessed at runtime.

    Indexing is relative to the first index. To introduce an offset, use typed
    array views.

    If `N <= 0`, the function returns `0.0`.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    cx: Complex64Array
        Input array.

    strideX: integer
        Index increment for `cx`.

    Returns
    -------
    norm: number
        L2-norm.

    Examples
    --------
    // Standard Usage:
    > var cx = new {{alias:@stdlib/array/complex64}}( [ 0.3, 0.1, 0.5, 0.0, 0.0, 0.5, 0.0, 0.2 ] );
    > var norm = {{alias}}( 4, cx, 1 )
    ~0.8

    // Using `N` and stride parameters:
    > cx = new {{alias:@stdlib/array/complex64}}( [ -2.0, 1.0, 3.0, -5.0 ] );
    > norm = {{alias}}( 1, cx, 2 )
    ~2.2

    // Using view offsets:
    > var cx0 = new {{alias:@stdlib/array/complex64}}( [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ] );
    > var cx1 = new {{alias:@stdlib/array/complex64}}( cx0.buffer, cx0.BYTES_PER_ELEMENT*1 );
    > norm = {{alias}}( 2, cx1, 1 )
    ~9.3


{{alias}}.ndarray( N, cx, strideX, offsetX )
    Computes the L2-norm of a complex single-precision floating-point vector
    using alternative indexing semantics.

    While typed array views mandate a view offset based on the underlying
    buffer, the `offsetX` parameter supports indexing semantics based on a
    starting index.

    Parameters
    ----------
    N: integer
        Number of indexed elements.

    cx: Complex64Array
        Input array.

    strideX: integer
        Index increment for `cx`.

    offsetX: integer
        Starting index of `cx`.

    Returns
    -------
    norm: number
        L2-norm.

    Examples
    --------
    // Standard Usage:
    > var cx = new {{alias:@stdlib/array/complex64}}( [ -2.0, 1.0, 3.0, -5.0 ] );
    > var norm = {{alias}}.ndarray( 1, cx, 2, 0 )
    ~2.2

    // Using an index offset:
    > cx = new {{alias:@stdlib/array/complex64}}( [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ] );
    > norm = {{alias}}.ndarray( 2, cx, 1, 1 )
    ~9.3

    See Also
    --------

