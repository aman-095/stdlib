/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var discreteUniform = require( '@stdlib/random/array/discrete-uniform' );
var sgemm = require( './../lib' );

// var opts = {
// 	'dtype': 'float32'
// };

// var M = 3;
// var N = 3;

// var A = discreteUniform( M*N, 0, 255, opts );
// var x = discreteUniform( N, 0, 255, opts );
// var y = discreteUniform( M, 0, 255, opts );

// sgemv.ndarray( 'row-major', 'none', M, N, 1.0, A, N, x, -1, 2, 1.0, y, -1, 2 );
// console.log( y );
// int order = 102;
// int transA = 112;
// int transB = 112;
// int M = 1;
// int N = 2;
// int K = 4;
// float alpha = 0.1f;
// float beta = 1.0f;
// float A[] = { -0.753f, -0.074f, -0.247f, -0.19f };
// int lda = 4;
// float B[] = { 0.061f, 0.743f, 0.22f, -0.682f, 0.733f, 0.417f, 0.772f, 0.665f };
// int ldb = 2;
// float C[] = { -0.253f, 0.972f };
// int ldc = 1;
// float C_expected[] = { -0.291994f, 0.898164f };
var Float32Array = require('@stdlib/array/float32');
var A = new Float32Array([1, 4, 2, 5, 3, 6 ]);
var B = new Float32Array([ 1, 5, 2, 6, 3, 7, 4, 8 ]);
var C = new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0]);
sgemm( 'row-major', 'none', 'transpose', 3, 4, 2, 1.0, A, 2, B, 2, 1.0, C, 4 );
console.log( C );
